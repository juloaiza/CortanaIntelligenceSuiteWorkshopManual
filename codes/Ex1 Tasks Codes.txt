# Exercise 1
-- Ex1. Task3. 14.--------------------
ds.flights <- maml.mapInputPort(1)

# Remove rows with missing values in DepDel15
ds.flights <- ds.flights[!is.na(ds.flights$DepDel15), ]

# Create a column for departure hour called CRSDepHour
ds.flights$CRSDepHour <- floor(ds.flights$CRSDepTime / 100)

# Trim the columns to only those we will use for the predictive model
ds.flights = ds.flights[, c("OriginAirportCode", "Month", "DayofMonth", "CRSDepHour", "DayOfWeek", "Carrier", "DestAirportCode", "DepDel15")]

maml.mapOutputPort("ds.flights");

----------------------------------------

-- Ex1. Task4. 10.--------------------
ds.weather <- maml.mapInputPort(1)

# substitute missing values in HourlyPrecip & WindSpeed
ds.weather$HourlyPrecip[is.na(ds.weather$HourlyPrecip)] <- 0.0
ds.weather$WindSpeed[is.na(ds.weather$WindSpeed)] <- 0.0

# Round weather time up to the next hour since
# that's the hour for which we want to use flight data
ds.weather$Hour = ceiling(ds.weather$Time / 100)

# Replace any WindSpeed values of "M" with 0.005 and make the feature numeric
speed.num = ds.weather$WindSpeed
speed.num[speed.num == "M"] = 0.005
speed.num = as.numeric(speed.num)
ds.weather$WindSpeed = speed.num 

# Replace any SeaLevelPressure values of "M" with 29.92 (the average pressure) and make the feature numeric
pressure.num = ds.weather$SeaLevelPressure
pressure.num[pressure.num == "M"] = 29.92
pressure.num = as.numeric(pressure.num)
ds.weather$SeaLevelPressure = pressure.num 

# Adjust the HourlyPrecip variable (convert "T" (trace) to 0.005)
rain = ds.weather$HourlyPrecip
rain[rain %in% c("T")] = "0.005"
ds.weather$HourlyPrecip = as.numeric(rain)

# Pare down the variables in the Weather dataset
ds.weather = ds.weather[, c("AirportCode", "Month", "Day", "Hour", "WindSpeed", "SeaLevelPressure", "HourlyPrecip")]

# cast some of the data types to factor (categorical)
ds.weather$AirportCode <- as.factor(ds.weather$AirportCode)

maml.mapOutputPort("ds.weather");
----------------------------------------

-- Ex1. Task5. 7.--------------------
ds.flights <- maml.mapInputPort(1)

# cast some of the data types to factor (categorical)
ds.flights$DayOfWeek <- as.factor(ds.flights$DayOfWeek)
ds.flights$Carrier <- as.factor(ds.flights$Carrier)
ds.flights$DestAirportCode <- as.factor(ds.flights$DestAirportCode)
ds.flights$OriginAirportCode <- as.factor(ds.flights$OriginAirportCode)

maml.mapOutputPort("ds.flights");
----------------------------------------

-- Ex1. Task7. 17.--------------------
ds.theresults <- maml.mapInputPort(1)

# remove a couple columns
ds.theresults$AIRPORT_ID <- NULL
ds.theresults$DISPLAY_AIRPORT_NAME <- NULL

# rename a couple columns
colnames(ds.theresults)[colnames(ds.theresults) == 'LATITUDE'] <- 'OriginLatitude'
colnames(ds.theresults)[colnames(ds.theresults) == 'LONGITUDE'] <- 'OriginLongitude'

maml.mapOutputPort("ds.theresults");
----------------------------------------
